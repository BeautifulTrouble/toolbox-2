// Utilities
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}


// Colors & other variables
$tactic: #f48c2d;
$theory: #de193b;
$story: #70c861;
$principle: #48abcc;
$methodology: #874493;

$text: #6b6b6b;
$shadow: transparentize(#d3d3d3, .7);
$bggray: darken(#f4f4f4, 1%);
$bglight: lighten($bggray, 20%);
$bgdark1: darken($bggray, 5%);
$bgdark2: darken($bggray, 20%);
$bgdark3: darken($bggray, 30%);
$set: #005577;

$ztop: 10;


// Breakpoints (based on Squarespace 7.1 template)
@import 'breakpoint-sass/stylesheets/_breakpoint.scss';
$xxl-width: 1920px;
$xl-width: 1280px;
$lg-width: 960px;
$md-width: 768px;
$sm-width: 0px;

// Named breakpoints
$xxl: $xxl-width;               // x-large desktop [1920)
$xl: $xl-width;                 // large desktop [1280)
$lg: $lg-width $xl-width - 1px; // desktop [960, 1279]
$md: $md-width $lg-width - 1px; // tablets [768, 959]
$sm: $sm-width $md-width - 1px; // phones [0, 767]
$upper: $lg-width;
$lower: 0 $lg-width - 1px;

// To use: @media #{$ss-mobile-header} { ... }
$ss-mobile-header: "only screen and (pointer: coarse) and (max-width: 1024px), screen and (max-width: 799px)";


// Grid system (here if needed, but so far not needed)
//$outer-margin: 0;
//$gutter-width: 8px;
//$breakpoints:
//    sm 0px $md-width - 1px,
//    md $md-width $lg-width - 1px,
//    lg $lg-width $xl-width - 1px,
//    xl $xl-width 10000px;
//$flexboxgrid-max-width: $xl-width - $gutter-width;
//@import 'flexboxgrid-sass/flexboxgrid.scss';
//
//// Augment the grid system with a couple missing features
//@each $breakpoint in $breakpoints {
//  $name: nth($breakpoint, 1);
//  $size: nth($breakpoint, 2);
//  $container: nth($breakpoint, 3);
//  @media only screen and (min-width: $size) {
//    .hide-#{$name}-up {
//      display: none !important;
//    }
//    .col-#{$name}-offset-0 {
//      @include flexboxgrid-sass-col-common;
//      margin-left: 0;
//    }
//  }
//}
//.hide-sm {
//  @media only screen and (max-width: $md-width - 1px) {
//    display: none !important;
//  }
//}


// Global sizes
$searchWidth: 24rem;


// Elements
:focus {
  outline: none;
}
::-moz-focus-inner {
  border: 0;
}
html {
  overflow-y: scroll;
  overflow-x: hidden;
  box-sizing: border-box;
}
*, *::before, *::after {
  box-sizing: border-box;
}
body {
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba($bggray,.3) 60%, rgba($bggray,1) 100%);
  background-size: contain;
  background-attachment: fixed;
  background-repeat: no-repeat; //Which browser needs this?

  margin: 0;
  color: $text;
  font-family: aktiv-grotesk, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
a:link, a:visited {
  // TODO: What is this color globally?
  color: $theory;
}
blockquote {
  font-style: italic;
  position: relative;
  quotes: '“' '”';
  color: lighten($text, 15%);
}
hr {
  border: none;
  border-top: 1px solid darken($bggray, 15%);
  margin: 1.5rem 0;
}
.h1, .h2, .h3, .h4, .h5, .h6 {
  font-weight: 700;
}
.h1, .h2, .h3 {
  font-family: ff-good-headline-web-pro-condensed, sans-serif; 
}
.h1 {
  font-size: 3.125rem;
  line-height: 1;
}
.h2 {
  font-size: 1.6rem;
}
.h3 {
  font-size: 1.375rem;
}
.h4 {
  font-size: 1rem;
  font-weight: normal;
  margin: .25rem 0;
  color: $text;
}
.h5 {
  font-size: .9rem;
  margin: 0;
  display: inline;
}
svg { // Center inline svgs
  margin: auto;
  display: block;
  outline: none;
}
input{
  background: transparent;
  border: 1px solid white;
  padding: .75rem 1rem;
  color: white;
  font-size: 1rem;
  outline: 0px solid white;
  transition: outline .2s;
  font-family: aktiv-grotesk, sans-serif;
  &[type="email"] {
    min-width: 80%;
  }
  &[type="submit"] {
    background: white;
    color: #fbc459;
    padding: .75rem 1rem;
    cursor: pointer;
  }
  &::-webkit-input-placeholder {
    color: white;
  }
  &:focus {
    outline: 2px solid white;
    & + input[type="submit"] {
      outline: 2px solid white;
    }
    &::-webkit-input-placeholder {
      opacity: 75%;
    }
  }
}


// Classes
@mixin type-particulars($color) {
  a:link, a:visited, .h1, .h2, .h3, .h4, .h5, .h6 { color: $color; }
  blockquote.pull-quote, .caption { border-color: $color; }
}
.tactic { @include type-particulars($tactic); }
.theory { @include type-particulars($theory); }
.story { @include type-particulars($story); }
.principle { @include type-particulars($principle); }
.methodology { @include type-particulars($methodology); }
.set { @include type-particulars($set); }

.bg-tactic { background-color: $tactic; }
.bg-theory { background-color: $theory; }
.bg-story { background-color: $story; }
.bg-principle { background-color: $principle; }
.bg-methodology { background-color: $methodology; }

.box {
  position: relative;
  margin: 1rem 0;
  border: 1px solid $bgdark3;
  padding: 1rem 2rem;
  background-color: $bggray;
  .h1, .h2, .h3, .h4, .h5, .h6, p { color: $text; }
  @mixin type-box($color) {
    border: 1px solid $color;
    background-color: tint($color, 95%);
    a:link, a:visited, .h1, .h2, .h3, .h4, .h5, .h6 { color: $color; }
    .h4::after { // Specific to expanders
      border-bottom-color: shade($color, 10%);
    }
  }
  &.tactic { @include type-box($tactic); }
  &.theory { @include type-box($theory); }
  &.story { @include type-box($story); }
  &.principle { @include type-box($principle); }
  &.methodology { @include type-box($methodology); }
}
.button {
  border: 1px solid white;
  border-radius: .35rem;
  padding: .7rem 2rem .8rem 2rem;
  text-align: center;
  display: inline-block;
  max-width: 18rem;
  font-size: 1rem;
  margin-bottom: 1rem;
  @include breakpoint($upper) {
    &:hover {
      background-color: $principle;
    }
  }
}
.clear { // Disgusting, but only used after floated blockquotes
  clear: both;
}
.router-link-active {
  font-weight: 700;
}
.rtl {
  direction: rtl;
}


// Animations
@keyframes add-favorite {
  0% {z-index: 1; opacity: 0; transform: scale(2);}
  100% {z-index: 1; opacity: 1; transform: scale(1);}
}


// Transitions
// fade
.fade-enter-active, .fade-leave-active {
  position: relative;
  transition: all .2s;
  opacity: 1;
}
.fade-enter, .fade-leave-to {
  opacity: 0;
}
// slide
.slide-enter-active, .slide-leave-active {
  transition: all .2s ease-out;
}
.slide-enter-to, .slide-leave {
   max-height: 100vh;
   overflow: hidden;
}
.slide-enter, .slide-leave-to {
   overflow: hidden;
   max-height: 0;
}
// slide-fade
.slide-fade-enter-active, .slide-fade-leave-active {
  transition: all .2s ease-out;
  opacity: 1;
}
.slide-fade-enter-to, .slide-fade-leave {
   max-height: 100vh;
   overflow: hidden;
}
.slide-fade-enter, .slide-fade-leave-to {
   overflow: hidden;
   max-height: 0;
   opacity: 0;
}
